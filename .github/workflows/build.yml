name: Build OpenJDK 8 for Android

on: [push, pull_request, workflow_dispatch]

jobs:
  build_android:
    strategy:
      matrix:
        arch: [ "aarch32" ]
      fail-fast: false

    name: "Build for Android ${{matrix.arch}}"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Link ndk-bundle
      run: |
        function get_full_ndk_version {
          majorVersion=$1
          ndkFullVersion=$($SDKMANAGER --list | grep "ndk;${majorVersion}.*" | awk '{gsub("ndk;", ""); print $1}' | sort -V | tail -n1)
          echo "$ndkFullVersion"
        }
        function setenv {
          export $1
          echo $1>>$GITHUB_ENV
        }
        setenv ANDROID_ROOT=/usr/local/lib/android
        setenv ANDROID_SDK_ROOT=${ANDROID_ROOT}/sdk
        setenv ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk-bundle
        setenv ANDROID_NDK_HOME=${ANDROID_NDK_ROOT}
        setenv SDKMANAGER=${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager
        ndkDefaultFullVersion=$(get_full_ndk_version "23")
        ln -sf $ANDROID_SDK_ROOT/ndk/$ndkDefaultFullVersion $ANDROID_NDK_ROOT
    - name: set up JDK 1.7
      uses: actions/setup-java@v1
      with:
        java-version: 1.7
    - name: Build with CI build script
      run: bash "ci_build_arch_${{matrix.arch}}.sh"
    - name: Upload JDK build output
      uses: actions/upload-artifact@v2
      with:
        name: "jdk8-${{matrix.arch}}"
        path: jdk8*.tar.xz
    - name: Upload JRE build output
      uses: actions/upload-artifact@v2
      with:
        name: 'jre8-${{matrix.arch}}'
        path: jre8*.tar.xz
    - name: Upload JRE debuginfo build output
      uses: actions/upload-artifact@v2
      with:
        name: "jre8-debuginfo-${{matrix.arch}}"
        path: dizout
